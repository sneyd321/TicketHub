//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketHub.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TicketService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/TicketService")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Admission {
            get {
                return this.AdmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmissionField, value) != true)) {
                    this.AdmissionField = value;
                    this.RaisePropertyChanged("Admission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Row {
            get {
                return this.RowField;
            }
            set {
                if ((object.ReferenceEquals(this.RowField, value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seat {
            get {
                return this.SeatField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatField, value) != true)) {
                    this.SeatField = value;
                    this.RaisePropertyChanged("Seat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Section {
            get {
                return this.SectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionField, value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InsertUser", ReplyAction="http://tempuri.org/IWCFService/InsertUserResponse")]
        void InsertUser(TicketHub.ServiceReference1.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InsertUser", ReplyAction="http://tempuri.org/IWCFService/InsertUserResponse")]
        System.Threading.Tasks.Task InsertUserAsync(TicketHub.ServiceReference1.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InsertTicket", ReplyAction="http://tempuri.org/IWCFService/InsertTicketResponse")]
        void InsertTicket(TicketHub.ServiceReference1.Ticket t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InsertTicket", ReplyAction="http://tempuri.org/IWCFService/InsertTicketResponse")]
        System.Threading.Tasks.Task InsertTicketAsync(TicketHub.ServiceReference1.Ticket t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/FindUser", ReplyAction="http://tempuri.org/IWCFService/FindUserResponse")]
        TicketHub.ServiceReference1.User FindUser(TicketHub.ServiceReference1.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/FindUser", ReplyAction="http://tempuri.org/IWCFService/FindUserResponse")]
        System.Threading.Tasks.Task<TicketHub.ServiceReference1.User> FindUserAsync(TicketHub.ServiceReference1.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/FindTicketById", ReplyAction="http://tempuri.org/IWCFService/FindTicketByIdResponse")]
        TicketHub.ServiceReference1.Ticket FindTicketById(int Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/FindTicketById", ReplyAction="http://tempuri.org/IWCFService/FindTicketByIdResponse")]
        System.Threading.Tasks.Task<TicketHub.ServiceReference1.Ticket> FindTicketByIdAsync(int Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DisplayAllTickets", ReplyAction="http://tempuri.org/IWCFService/DisplayAllTicketsResponse")]
        TicketHub.ServiceReference1.Ticket[] DisplayAllTickets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DisplayAllTickets", ReplyAction="http://tempuri.org/IWCFService/DisplayAllTicketsResponse")]
        System.Threading.Tasks.Task<TicketHub.ServiceReference1.Ticket[]> DisplayAllTicketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteTicket", ReplyAction="http://tempuri.org/IWCFService/DeleteTicketResponse")]
        void DeleteTicket(TicketHub.ServiceReference1.Ticket t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteTicket", ReplyAction="http://tempuri.org/IWCFService/DeleteTicketResponse")]
        System.Threading.Tasks.Task DeleteTicketAsync(TicketHub.ServiceReference1.Ticket t);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : TicketHub.ServiceReference1.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<TicketHub.ServiceReference1.IWCFService>, TicketHub.ServiceReference1.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertUser(TicketHub.ServiceReference1.User u) {
            base.Channel.InsertUser(u);
        }
        
        public System.Threading.Tasks.Task InsertUserAsync(TicketHub.ServiceReference1.User u) {
            return base.Channel.InsertUserAsync(u);
        }
        
        public void InsertTicket(TicketHub.ServiceReference1.Ticket t) {
            base.Channel.InsertTicket(t);
        }
        
        public System.Threading.Tasks.Task InsertTicketAsync(TicketHub.ServiceReference1.Ticket t) {
            return base.Channel.InsertTicketAsync(t);
        }
        
        public TicketHub.ServiceReference1.User FindUser(TicketHub.ServiceReference1.User u) {
            return base.Channel.FindUser(u);
        }
        
        public System.Threading.Tasks.Task<TicketHub.ServiceReference1.User> FindUserAsync(TicketHub.ServiceReference1.User u) {
            return base.Channel.FindUserAsync(u);
        }
        
        public TicketHub.ServiceReference1.Ticket FindTicketById(int Ticket) {
            return base.Channel.FindTicketById(Ticket);
        }
        
        public System.Threading.Tasks.Task<TicketHub.ServiceReference1.Ticket> FindTicketByIdAsync(int Ticket) {
            return base.Channel.FindTicketByIdAsync(Ticket);
        }
        
        public TicketHub.ServiceReference1.Ticket[] DisplayAllTickets() {
            return base.Channel.DisplayAllTickets();
        }
        
        public System.Threading.Tasks.Task<TicketHub.ServiceReference1.Ticket[]> DisplayAllTicketsAsync() {
            return base.Channel.DisplayAllTicketsAsync();
        }
        
        public void DeleteTicket(TicketHub.ServiceReference1.Ticket t) {
            base.Channel.DeleteTicket(t);
        }
        
        public System.Threading.Tasks.Task DeleteTicketAsync(TicketHub.ServiceReference1.Ticket t) {
            return base.Channel.DeleteTicketAsync(t);
        }
    }
}
